import { groth16 } from "snarkjs";

import { GenerateCircuitInputs } from "./inputs.js";

(async function () {
    const start = Date.now();

    const apiInputs = {
        availableWeight: "10",
        sikRoot: "20699770319107532211407085887164176883363808523961700185452626356029899554367",
        sikSiblings: [
            "7068169877544923635254297300362768053355984602988861517173315754364843107594",
            "5251676753694870750809025315975495983943591280743542520940034010651793887816",
            "0",
            "19552850074494409346718831611883515831887036873484359110076861565343907331024",
            "0",
            "0",
            "0",
            "9998176326094593556084983585606371792560632861718485741962398589673359344614",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0"
        ],
        censusRoot: "13916389109447499588296704204717694467589775555657902274510885897382386546700",
        censusSiblings: [
            "12366268307134501048203439081800384874936488862220797234394903119480155945136",
            "12676360189231543357962133946856914905446489372134712662018148734243825801196",
            "2949264917405257652811783337699144962864459143352195967640623827514484779762",
            "5728956558280527269009064620332941519123835299968990037413276306147161425504",
            "9184864569649960805217988156564114797711255310496852783387504800187464802159",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0"
        ]
    }

    const clientInputs = {
        electionId: "7faeab7a7d250527d614e952ae8e446825bd1124c6def410844c7c383d1519a6",
        address: "032234DBb3B6dA8c11DDdc26338867C769e66B00",
        password: "70617373776f7264313233",
        signature: "7b6cac3c3b64d0b7fc10f0f6d4b8baf2548f246a748d25d8825becc1e2fa3c6e0a2654b042be487f0a352bc2c0577cde1440373197b4d93e09fc7502b61e9632",
        voteWeight: "5",
    }

    // computing full inputs including those that come from the API
    console.log("generating inputs");
    const inputs = await GenerateCircuitInputs(
        // client inputs
        clientInputs.electionId, clientInputs.address, clientInputs.password, clientInputs.signature, clientInputs.voteWeight, 
        // api inputs    
        apiInputs.availableWeight, apiInputs.sikRoot, apiInputs.sikSiblings, apiInputs.censusRoot, apiInputs.censusSiblings
    );
    console.log("inputs done");
    console.log("generating proof");
    await groth16.fullProve(
        inputs, 
        "../artifacts/zkCensus/dev/160/circuit.wasm", 
        "../artifacts/zkCensus/dev/160/proving_key.zkey"
    );
    console.log("proof done");
    const end = Date.now();
    console.log(`proof took ${(end - start) / 1000}s`);
})();

